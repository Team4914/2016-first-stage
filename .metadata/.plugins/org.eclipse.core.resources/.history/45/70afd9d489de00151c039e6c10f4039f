// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4914.PantherBot.subsystems;

import org.usfirst.frc4914.PantherBot.RobotMap;
import org.usfirst.frc4914.PantherBot.commands.*;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Forklift extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final CANTalon winchCAN = RobotMap.forkliftWinchCAN;
    private final SpeedController winchSlave = RobotMap.forkliftWinchSlave;
    private final CANTalon hookCAN = RobotMap.forkliftHookCAN;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public double getFLiftQEValue() {
		return cANTalon1.getEncPosition() / 10000.0;
	}

	public double getHookQEValue() {
		return cANTalon2.getEncPosition() / 10000.0;
	}
	
	public void resetFLiftQE() {
		cANTalon1.reset();
	}
	
	public void resetHookQE() {
		cANTalon2.reset();
	}
	
	public void setFLift(double outputValue) {
		cANTalon1.set(outputValue);
		speedController1.set(outputValue);
	}
	
	public void setHook(double outputValue) {
		cANTalon2.set(outputValue);
	}
	
	public void stop() {
		setFLift(0);
		setHook(0);
	}
}


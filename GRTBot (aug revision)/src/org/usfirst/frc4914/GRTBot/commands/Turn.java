// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4914.GRTBot.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4914.GRTBot.Robot;

/**
 *
 */
public class Turn extends Command {

	boolean isClockwise = true;
	double angle = 0;
	double targetAngle;
	
	final double ANGLE_VARIANCE = 2.0;

	/**
	 * Turns robot on the spot
	 * @param isClockwise true if desired turn is clockwise, false for counterclockwise
	 * @param angle angle to turn
	 */
    public Turn(boolean isClockwise, double angle) {
    	this.isClockwise = isClockwise;
    	this.angle = angle;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	if (isClockwise) {
    		targetAngle = Robot.drivetrain.getGyroBearing() + angle;
    		targetAngle %= 360;
    	}
    	else {
    		targetAngle = Robot.drivetrain.getGyroBearing() + 360 - angle;
    		targetAngle %= 360;
    	}
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	if (isClockwise) {
    		Robot.drivetrain.setLeftVictor(1);
    		Robot.drivetrain.setRightVictor(-1);
    	}
    	else {
    		Robot.drivetrain.setLeftVictor(-1);
    		Robot.drivetrain.setRightVictor(1);	
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return Robot.drivetrain.getGyroBearing() >= targetAngle - ANGLE_VARIANCE &&
        		Robot.drivetrain.getGyroBearing() <= targetAngle + ANGLE_VARIANCE;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drivetrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.drivetrain.stop();
    }
}
